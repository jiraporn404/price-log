import { useState, useEffect } from "react";
import { addProduct, getProducts } from "./services/productService";
import { Timestamp } from "firebase/firestore";
import { useAuth } from "./contexts/authContext";

type Product = {
  id: string;
  name: string;
  location: string;
  date: Timestamp; // Firestore Timestamp type
  price: number;
};

export function PriceLogApp() {
  const { user } = useAuth();
  const [name, setName] = useState("");
  const [price, setPrice] = useState<number | "">("");
  const [location, setLocation] = useState("");
  const [products, setProducts] = useState<Product[]>([]);
  const [searchTerm, setSearchTerm] = useState("");
  console.log("products", products);
  useEffect(() => {
    loadProducts();
  }, []);

  const loadProducts = async () => {
    console.log("loadProducts");
    const data = await getProducts(user?.uid || "");
    setProducts(data as Product[]);
  };

  const handleAddProduct = async () => {
    if (!name || price === "" || !location) return alert("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
    await addProduct(user?.uid || "", name, Number(price), location);
    setName("");
    setPrice("");
    setLocation("");
    loadProducts();
  };

  const filteredProducts = products.filter((product) =>
    product.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="p-4 max-w-lg mx-auto">
      <h1 className="text-xl font-bold mb-4">üì¶ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>

      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
      <input
        type="text"
        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
        value={name}
        onChange={(e) => setName(e.target.value)}
        className="border p-2 w-full mb-2"
      />
      <input
        type="number"
        placeholder="‡∏£‡∏≤‡∏Ñ‡∏≤"
        value={price}
        onChange={(e) =>
          setPrice(e.target.value === "" ? "" : Number(e.target.value))
        }
        className="border p-2 w-full mb-2"
      />
      <input
        type="text"
        placeholder="‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô"
        value={location}
        onChange={(e) => setLocation(e.target.value)}
        className="border p-2 w-full mb-2"
      />
      <button
        onClick={handleAddProduct}
        className="bg-blue-500 text-white p-2 w-full"
      >
        ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      </button>

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
      <h2 className="text-lg font-bold mt-4">üìú ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
      <input
        type="text"
        placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤..."
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        className="border p-2 w-full mb-2"
      />
      <ul className="mt-2">
        {filteredProducts.map((product) => (
          <li key={product.id} className="border p-2 my-1">
            {product.name} - ‡∏ø{product.price} üõí {product.location}
          </li>
        ))}
      </ul>
    </div>
  );
}
